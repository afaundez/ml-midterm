#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/parser'
require_relative '../lib/dsl'

options = Parser.parse ARGV

srand options.seed if options.seed

K = options.class_cardinality
N = options.measurements_cardinality
M = options.measurement_cardinality
Z = 10 * (K * (M**N))

E = options.experiments
R = options.repetitions

indent_levels :report, :experiment, :repeat, :adapt, :compare

create N.dimensions each_with: M.values do |space|
  create 1.dimension with: K.values do |labels|
    experiment E.times, within: space, assigning: labels do |_, classifier|
      create Z.samples from: space, to: labels do |training_set, test_set|
        fit classifier, with: training_set do |fitted_classifier, _|
          report space, labels, training_set, fitted_classifier,
                 titled: 'Classifier summary before any adapting',
                 including: :values

          repeat R.times, using: test_set do |repetition, data, target|
            predict using: fitted_classifier, with: data do |predictions|
              compare predictions, with: target, show: :confusion
              adapt fitted_classifier, with: test_set, based_on: predictions
            end

            predict using: fitted_classifier, with: data do |predictions|
              compare predictions, with: target, show: :confusion
            end

            report fitted_classifier, titled: 'Classifier summary after ' \
                                        "#{repetition} adaptations",
                                      including: :values
          end
        end

        report classifier, titled: 'Finish training set summary',
                           including: :values
      end
    end
  end
end
