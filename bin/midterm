#!/usr/bin/env ruby
# frozen_string_literal: true

require 'set'
require_relative '../lib/parser'
require_relative '../lib/dsl'
require_relative '../lib/matrix'
require_relative '../lib/dimension'
require_relative '../lib/space'
require_relative '../lib/data_set'
require_relative '../lib/classifier'

options = Parser.parse ARGV

K = options[:class_cardinality]
N = options[:measurements_cardinality]
M = options[:measurement_max_cardinality]
Z = 10 * (K * (M ** N))
I = 1

create :space do |space|
  space.labels = 1.dimension with: K.labels
  space.dimensions = N.dimensions :each, with: M.measurements

  experiment using: space do |classifier|
    iterate I.times do |iteration|
      create Z.samples from: space do |training, test|
        fit classifier, with: training
        summary classifier, 'After fitting, Before adapting', only: :values

        predict using: classifier, with: test.data do |predictions|
          compare predictions, with: test.target
          adapt classifier, with: test, based_on: predictions

          predict using: classifier, with: test.data do |adapted_predictions|
            compare adapted_predictions, with: test.target
          end
        end

        summary classifier, 'After adapting', only: :values
      end
    end
  end
end
