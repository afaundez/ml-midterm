#!/usr/bin/env ruby
# frozen_string_literal: true

require 'set'
require_relative '../lib/parser'
require_relative '../lib/dsl'
require_relative '../lib/matrix'
require_relative '../lib/dimension'
require_relative '../lib/space'
require_relative '../lib/data_set'
require_relative '../lib/classifier'

options = Parser.parse ARGV

srand options.seed if options.seed

K = options.class_cardinality
N = options.measurements_cardinality
M = options.measurement_cardinality
Z = 10 * (K * (M ** N))

E = options.experiments
R = options.repetitions

indent_levels :experiment, :adapt, :compare, :summary, :repeat

create :measurement_space do |space|
  space.labels = 1.dimension with: K.labels, distributed: :random
  space.dimensions = N.dimensions :each, with: M.values, distributed: :random
  summary space, titled: 'Space summary'

  experiment E.times, within: space do |iteration, classifier|
    create Z.samples from: space do |training, test|
      summary training, titled: 'New training summary'

      fit classifier, with: training do |classifier, _|
        summary classifier, titled: 'Classifier summary before any adapting',
                            including: :values

        repeat R.times, using: test do |repetition, data, target|
          predict using: classifier, with: data do |predictions|
            compare predictions, with: target
            adapt classifier, with: test, based_on: predictions
          end

          predict using: classifier, with: data do |predictions|
            compare predictions, with: target, show: :confusion
          end

          summary classifier, titled: "Classifier summary after " \
                                      "#{repetition} adaptations",
                              including: :values
        end
      end

      summary classifier, titled: 'Finish training summary', including: :values
    end
  end
end
